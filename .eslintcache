[{"C:\\workspace\\interviews\\surge-pos\\src\\App.tsx":"1","C:\\workspace\\interviews\\surge-pos\\src\\index.tsx":"2","C:\\workspace\\interviews\\surge-pos\\src\\widgets\\CreditCheck\\index.tsx":"3","C:\\workspace\\interviews\\surge-pos\\src\\widgets\\CreditCheck\\store.ts":"4","C:\\workspace\\interviews\\surge-pos\\src\\widgets\\SalesOrderEntry\\index.tsx":"5","C:\\workspace\\interviews\\surge-pos\\src\\widgets\\SalesOrderEntry\\store.ts":"6"},{"size":619,"mtime":1606287418039,"results":"7","hashOfConfig":"8"},{"size":219,"mtime":1606280630926,"results":"9","hashOfConfig":"8"},{"size":1597,"mtime":1606287477548,"results":"10","hashOfConfig":"8"},{"size":646,"mtime":1606282477165,"results":"11","hashOfConfig":"8"},{"size":3075,"mtime":1606287515260,"results":"12","hashOfConfig":"8"},{"size":738,"mtime":1606285513180,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pzyusa",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\workspace\\interviews\\surge-pos\\src\\App.tsx",[],"C:\\workspace\\interviews\\surge-pos\\src\\index.tsx",[],"C:\\workspace\\interviews\\surge-pos\\src\\widgets\\CreditCheck\\index.tsx",["27"],"C:\\workspace\\interviews\\surge-pos\\src\\widgets\\CreditCheck\\store.ts",["28"],"import create from 'zustand'\r\nimport {configurePersist} from 'zustand-persist'\r\n\r\nconst { persist, purge } = configurePersist({\r\n    storage: localStorage,\r\n    rootKey: 'root',\r\n})\r\ntype creditCheckStore = {\r\n    creditLimit: number,\r\n    setCreditLimit: (creditLimit: number) => void\r\n}\r\n\r\nexport const useCreditCheckStore = create<creditCheckStore>(\r\n    persist(\r\n        {\r\n            key: 'creditCheck',\r\n            allowlist: ['creditLimit']\r\n        }, \r\n        (set) => ({\r\n            creditLimit: 30000,\r\n            setCreditLimit: (creditLimit: number) => {\r\n                set({creditLimit})\r\n            }\r\n        })\r\n    )\r\n)","C:\\workspace\\interviews\\surge-pos\\src\\widgets\\SalesOrderEntry\\index.tsx",[],"C:\\workspace\\interviews\\surge-pos\\src\\widgets\\SalesOrderEntry\\store.ts",[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":10,"nodeType":"31","messageId":"32","endLine":2,"endColumn":16},{"ruleId":"29","severity":1,"message":"33","line":4,"column":18,"nodeType":"31","messageId":"32","endLine":4,"endColumn":23},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'purge' is assigned a value but never used."]